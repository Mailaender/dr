diff -ur OpenRA-OpenRA-c84f53c/OpenRA.Game/Game.cs OpenRA-OpenRA-c84f53c-new/OpenRA.Game/Game.cs
--- OpenRA-OpenRA-c84f53c/OpenRA.Game/Game.cs	2011-07-27 13:48:32.000000000 +0400
+++ OpenRA-OpenRA-c84f53c-new/OpenRA.Game/Game.cs	2011-08-02 23:09:16.722267918 +0400
@@ -322,10 +322,26 @@
 
 		static bool quit;
 		public static event Action OnQuit = () => {};
+		
 		internal static void Run()
 		{
+			ushort mSecToWaitInCycle = (ushort) (1000/Settings.Graphics.FrameRate);
+			System.Diagnostics.Stopwatch sw;
+			
 			while (!quit)
+			{
+				sw = System.Diagnostics.Stopwatch.StartNew();
 				Tick( orderManager, viewport );
+				if ( (Settings.Graphics.CapFrameRate == true) && (sw.Elapsed.TotalMilliseconds < mSecToWaitInCycle ) )
+				{
+					while (true)
+					{
+						if (sw.Elapsed.TotalMilliseconds >= mSecToWaitInCycle)
+							break;
+						System.Threading.Thread.Sleep(1);
+					}
+				}
+			}
 
 			OnQuit();
 		}
diff -ur OpenRA-OpenRA-c84f53c/OpenRA.Game/GameRules/Settings.cs OpenRA-OpenRA-c84f53c-new/OpenRA.Game/GameRules/Settings.cs
--- OpenRA-OpenRA-c84f53c/OpenRA.Game/GameRules/Settings.cs	2011-07-27 13:48:32.000000000 +0400
+++ OpenRA-OpenRA-c84f53c-new/OpenRA.Game/GameRules/Settings.cs	2011-08-02 22:51:14.015407493 +0400
@@ -59,6 +59,8 @@
 		public int2 FullscreenSize = new int2(0,0);
 		public int2 WindowedSize = new int2(1024, 768);
 		public bool PixelDouble = false;
+		public bool CapFrameRate = false;
+		public ushort FrameRate = 70;
 
 		public int BatchSize = 8192;
 		public int NumTempBuffers = 8;
